{"version":3,"sources":["logo.svg","components/MultiCard.js","components/FluxTab.js","components/LeftPanel.js","classes/Content.js","classes/FluxContent.js","classes/DroppableContent.js","classes/Link.js","classes/Flux.js","components/Diagram.js","components/ContentAdmin.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fluxCard","cursor","width","border","margin","MultiCard","index","Meta","Card","title","this","props","identificador","description","cantidad","styles","generateStyles","react_default","a","createElement","card","key","style","categoria","available","backgroundColor","position","height","top","left","_this","onClick","draggable","flux","className","generateFluxCard","map","number","generateMultiCard","generateCard","React","Component","FluxTab","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","modalVisible","fluxInDiagram","addFluxToDiagram","setState","defineProperty","name","_this2","modal","visible","onCancel","getOrderedContentsFromOrderField","content","i","getName","es_button","type","disabled","_this3","fluxes","renderModal","MultiCard_MultiCard","showContents","LeftPanel","contentChanged","selectedItem","hiddenCards","value","console","log","axios","get","then","response","data","length","contents","changeContents","event","dataTransfer","dropEffect","push","selectCategory","categories","setData","JSON","stringify","contentId","isNavegable","delete","params","id","window","open","url","location","reload","TabPane","Tabs","Option","Select","tabs","tab","color","es_select","undefined","placeholder","onChange","e","category","toString","onDragStart","onContentDragStart","contenidos","onDragEnd","onContentDragEnd","onContentClick","find","hiddenCard","FluxTab_FluxTab","Content","idContent","metadata","keys","k","FluxContent","order","DroppableContent","Link","origin","destination","Flux","links","link","setContents","filter","toLowerCase","sort","content1","content2","getOrder","discardedNodeKey","subject","subjectFromLinkKey","fromNode","subjectToLinkKey","toNode","removeLinkWithOriginAndDestination","addLink","from","to","setLinks","fluxLink","firstContent","getFirstContentFromLinks","nextContent","orderedContents","auxLink","getLinkWithOrigin","getContentByName","goObj","go","GraphObject","make","GoJs","success","message","error","onChangeInputText","inputValueText","target","onChangeRadioNode","valueRadioNode","onChangeCheckLink","checkedValue","valueCheck","checked","confirmNodeModal","contentNode","temporaryContent","pattern","modalNodeVisible","confirmLinkModal","temporaryLink","metaInfo","next","valueRadioLink","modalLinkVisible","renderCanvas","bind","assertThisInitialized","keyForRerender","myModel","myDiagram","loading","inputValue","showSend","addedContents","patterns","infoPatterns","onDiagramEnter","onDiagramDrop","onDragOver","sendData","showSendDataModal","onChangeInput","generateNodeTemplate","generateLinkTemplate","shouldShowFlux","addContentsManually","handlerThis","Node","doubleClick","node","Binding","Shape","portId","fromLinkable","toLinkable","toMaxLinks","fromMaxLinks","toLinkableSelfNode","TextBlock","font","curve","Bezier","relinkableFrom","relinkableTo","toArrow","fill","model","TreeModel","diagram","Diagram","refs","goJsDiv","initialContentAlignment","Spot","Center","addDiagramListener","ev","addLinkWithOriginAndDestination","Math","random","relink","parameter","part","first","Yd","removeContent","removeLinkWithOrigin","removeLinkWithDestination","setModelAndDiagram","getOrderedContentsFromLinks","contentsToSend","nombreConjunto","post","catch","GraphLinksModel","nodeTemplate","linkTemplate","validCycle","CycleDestinationTree","preventDefault","properties","parsedContent1","parse","parsedContent2","parsedContent3","parsedContent4","objectSpread","contentid","isnavegable","some","addedContent","getIdContent","oldContents","fluxName","point","startTransaction","addNodeData","Brush","randomColor","commitTransaction","addLinkDataCollection","_this4","newFlux","isNotInDiagram","addContent","transformViewToDoc","Point","addContentToGoJsDiagram","prevState","concat","toConsumableArray","getOrderedLinksFromContentsOrder","doesLinkApplies","addLinkToGoJsDiagram","PIXELRATIO","computePixelRatio","pixelratio","can","HTMLCanvasElement","bbox","getBoundingClientRect","bbw","bbh","mx","clientX","my","clientY","getDroppableContent","items","calculateDroppedPoint","stopPropagation","_this5","radioStyle","display","lineHeight","RadioGroup","Radio","Group","centered","onOk","es_radio","_this6","es_checkbox","input","marginLeft","_this7","Panel","Collapse","marginTop","handlePattern","collapse","bordered","defaultActiveKey","expandIcon","_ref","isActive","icon","rotate","header","background","borderRadius","marginBottom","overflow","paddingLeft","spin","size","onDragEnter","onDrop","ref","nodeModal","linkModal","submitModal","ContentAdmin","showFluxContent","diagramFluxId","_id","newContents","diagramFlux","Header","Layout","Sider","layout","LeftPanel_LeftPanel","fontSize","Diagram_GoJs","App","ContentAdmin_ContentAdmin","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.498eb762.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Card } from 'antd';\n\n\nlet fluxCard = { \n  cursor:\"pointer\", \n  width:\"100%\",\n  border:\"1px solid\", \n  margin:\"0 auto\" \n}\n\nexport default class MultiCard extends React.Component{\n\n  generateMultiCard(index){\n    const { Meta } = Card;\n    const title = this.props.identificador //index === this.props.cantidad ? this.props.identificador : \"\"\n    const description = index === 2 ? (this.props.cantidad + \" contenidos\") : \"\"\n    const styles = this.generateStyles(index)\n    return(\n      <Card key={index} style={styles}>\n        <Meta title={title} description={description} />\n      </Card>\n    )\n  }\n  \n  generateCard(){\n    const { Meta } = Card;\n    const title = this.props.identificador;\n    const description = this.props.categoria;\n    var isAvailable = this.props.available\n    return(\n      (isAvailable) ?\n      <Card style={{ width:\"100%\",border:\"1px solid\", margin:\"0 auto\" }}>\n        <Meta title={title} description={description}/>\n      </Card>\n      :\n      <Card style={{ width:\"100%\",border:\"1px solid\", margin:\"0 auto\", backgroundColor: \"red\" }}>\n        <Meta title={title} description={description}/>\n      </Card>\n    )\n  }\n  \n  generateFluxCard(){\n    const { Meta } = Card;\n    const title = this.props.identificador;\n    const description = \"Grupo\";\n    return(\n        <Card \n          style={fluxCard}>\n          <Meta title={title} description={description}/>\n        </Card>\n    )\n  }\n\n  generateStyles(index){\n    return(\n      {\n        position:\"absolute\",\n        width:\"100%\",\n        height:\"95px\",\n        border:\"1px solid\",\n        margin:\"0 auto\",\n        top:(10 * index) + \"px\",\n        left:(10 * index) + \"px\"\n      }   \n    ) \n  }\n  \n\n  render(){\n    return(\n      <div onClick={this.props.onClick} draggable={!this.props.flux} className=\"multicard-container\">\n        {this.props.flux ? \n          this.generateFluxCard()\n        :\n        this.props.cantidad > 1 ?\n          [0,1,2].map((number,index) => \n            this.generateMultiCard(index)\n          )\n        :\n          this.generateCard()\n        }\n      </div>\n    )\n  }\n\n}","import React from 'react'\nimport MultiCard from \"./MultiCard.js\"\nimport {Modal,Button} from 'antd'\n\nexport default class FluxTab extends React.Component{\n\n\n  constructor(props){\n    super(props)\n    this.state = { \n      modalVisible:[],\n      fluxInDiagram:[]\n    }\n  }\n\n  addFluxToDiagram(flux){\n    this.props.addFluxToDiagram(flux);\n    this.setState({\n      modalVisible:false,\n      fluxInDiagram:{\n        [flux.name]:true\n      }\n    })\n  }\n\n\n  renderModal(flux){\n    return(\n      <Modal\n        key={flux.name}\n        title={\"Contenidos del grupo - \" + flux.name}\n        visible={true}\n        onCancel={() => this.setState({modalVisible:false})}\n      >\n        {flux.getOrderedContentsFromOrderField().map( (content,i) => \n          <div key={i}>{content.getName()}</div>\n        )}\n        <Button \n          type=\"primary\" \n          onClick={() => this.addFluxToDiagram(flux)}\n          disabled={this.state.fluxInDiagram[flux.name]}\n        >\n          Editar\n        </Button>\n      </Modal>\n    )\n  }\n\n  showContents(index){\n    this.setState({\n      modalVisible:{\n        [index]:true\n      }\n    })\n  }\n\n  render(){\n    return(\n      <div>\n          {this.props.fluxes != null && this.props.fluxes.map( (flux,i) =>\n            <div key={i}> \n              {this.state.modalVisible[i] && this.renderModal(flux)}\n              <MultiCard\n                disabled={this.state.fluxInDiagram[flux.name]}\n                onClick={() => this.showContents(i)}\n                flux={true}\n                key={i}\n                identificador={flux.name}\n              />\n            </div>\n          )}\n      </div>\n    )\n  }\n\n\n}","import React from 'react'\nimport MultiCard from \"./MultiCard.js\"\nimport { Tabs, Select } from 'antd';\nimport FluxTab from './FluxTab.js';\nimport axios from 'axios'\n\n\nexport default class LeftPanel extends React.Component {\n  constructor(props){\n      super(props)\n      this.state = {\n        contentChanged:false,\n        selectedItem:\"\",\n        hiddenCards:[]\n      }\n  }\n\n  selectCategory(value){\n    //var username = (new URL(window.location.href)).searchParams.get('username')\n\n\n    console.log(value)\n    axios.get(\"https://alexa-apirest.herokuapp.com/users/admin/contentsByCategory/\"+value)\n    .then( (response) => {\n      if (response.data.length > 0) {\n            let contents = response.data\n            //let contentsFilter = contents.filter((elem)=> !this.state.hiddenCards.includes(elem.contenidos[0].identificador) )\n            //let index = contentsFilter.indexOf(this.props.manager.getContentById(idContent))\n            //contents = contentsFilter.splice(index,1)\n            this.props.changeContents(contents);\n      }\n      this.setState({\n        selectedItem:value\n      })  \n    });\n  }\n\n  onContentDragEnd(event,content){\n    //var username = (new URL(window.location.href)).searchParams.get('username')\n\n    if(event.dataTransfer.dropEffect !== 'none'){\n      //event.target.parentNode.style.display = \"none\"\n      var hiddenCards = this.state.hiddenCards\n      hiddenCards.push(content.identificador)\n      this.setState({\n        hiddenCards: hiddenCards\n      })\n      \n      if(this.state.selectedItem !== \"\"){ \n        this.selectCategory(this.state.selectedItem) //Si todavia no asigno categoria, mandar la que es por defecto\n      }\n      else{ //Mandar la primera\n        if(this.props.categories.length > 0)\n          this.selectCategory(this.props.categories[0]) \n        else\n          this.selectCategory(axios.get(\"https://alexa-apirest.herokuapp.com/users/getFirstCategory\")) \n      } \n    } \n  }\n\n\n  onContentDragStart(event,content){\n    event.dataTransfer.setData(JSON.stringify({contentId:content.contentId}), 'contentId');\n    event.dataTransfer.setData(JSON.stringify({identificador:content.identificador}), 'identificador');\n    event.dataTransfer.setData(JSON.stringify({categoria:content.categoria}), 'categoria');\n    event.dataTransfer.setData(JSON.stringify({isNavegable:content.available}), 'isNavegable');      \n  }\n\n  onContentClick(event,content){\n    //var username = (new URL(window.location.href)).searchParams.get('username')\n\n    if (!content.available){\n      axios.delete(\"https://alexa-apirest.herokuapp.com/users/deleteContentUnavailable\"\n      ,{ params: { id:content.contentId }},function(data){\n          console.log(data)\n          //abrir en una nueva pestaña la url del contenido\n          window.open(content.url, \"_blank\")\n          window.location.reload()\n      });\n    }\n  }\n\n  generateStyles(index){\n    return(\n      {\n        position:\"relative\",\n        width:\"80%\",\n        //height:\"95px\",\n        border:\"1px solid\",\n        margin:\"0 auto\",\n        //bottom:\"40px\",\n        top:\"5px\"\n      }   \n    ) \n  }\n\n  render(){\n    const TabPane = Tabs.TabPane;\n    const {Option} = Select\n    const styles = this.generateStyles()\n    return(\n      <div className=\"no-assigned__cards__container\">\n        <Tabs>\n          <TabPane tab=\"Contenidos\" key=\"1\">\n            {this.props.categories.length > 0 &&\n              <div>\n              <h3 style={{color:\"white\",left:\"10px\"}}> Filtrar por categoria </h3>\n              <Select value={this.state.selectedItem? this.state.selectedItem : undefined}  placeholder=\"Categoria\" \n                  onChange={(e) =>this.selectCategory(e)} style={styles}>\n                  {this.props.categories.map( (category, index) => {\n                    return(\n                        <Option \n                          key={index} \n                          value={category.toString()}>\n                            {category.toString()}\n                        </Option>\n                        )\n                    })\n                  }\n              </Select>\n              <br/>\n              <br/>\n              <br/>\n              </div>\n            }\n            \n            {this.props.contents.map((content,index) =>\n                <div\n                key={index} \n                onDragStart={(e) => this.onContentDragStart(e,content.contenidos)} \n                onDragEnd={(e) => this.onContentDragEnd(e,content.contenidos)}\n                onClick = {(e) => this.onContentClick(e,content.contenidos)}\n                >\n                  {!this.state.hiddenCards.find(hiddenCard => hiddenCard === content.contenidos.identificador) &&\n                    <MultiCard  \n                      identificador={content.contenidos.identificador} \n                      categoria={content.contenidos.categoria}\n                      cantidad={content.contenidos.contentId ? content.contenidos.contentId.length : null}\n                      available={content.contenidos.available} \n                    />\n                  }\n                </div>\n              \n          )}\n          </TabPane>\n          <TabPane tab=\"Grupos\" key=\"2\">\n              <FluxTab \n                fluxes={this.props.fluxes}\n                addFluxToDiagram={this.props.addFluxToDiagram}  \n              />\n          </TabPane>          \n        </Tabs>\n      </div>\n    )\n  }\n\n}","export default class Content {\n\n  constructor(name, idContent, category, data){\n    this.name = name;\n    this.idContent = idContent\n    this.category = category\n    this.metadata = {}\n  }\n\n  getName(){\n    return this.name\n  }\n\n  getIdContent(){\n    return this.idContent\n  }\n\n  getCategory(){\n    return this.category\n  }\n\n  getIsNavegable(){\n    return this.isNavegable\n  }  \n\n  setName(name){\n    this.name = name;\n  }\n\n  setIdContent(idContent){\n    this.idContent = idContent;\n  }\n\n  setCategory(category){\n    this.category = category;\n  }\n\n  getData(){\n    return this.data\n  }  \n\n  setData(data){\n    var keys = Object.keys(data)\n    keys.map( k => this.metadata[k] = data[k] )\n  }\n\n}","import Content from './Content'\nexport default class FluxContent extends Content {\n    constructor(name, idContent, category, order){\n        super(name, idContent, category)\n        this.order = order\n    }\n\n    getOrder(){\n        return this.order\n    }\n\n    setOrder(order){\n        this.order = order\n    }\n\n} ","import Content from './Content'\nexport default class DroppableContent extends Content {\n    constructor(name, idContent, category, isNavegable){\n        super(name, idContent, category)\n        this.isNavegable = isNavegable\n    }\n\n    getisNavegable(){\n        return this.isNavegable\n    }\n\n    setIsNavegable(isNavegable){\n        this.isNavegable = isNavegable\n    }\n\n} ","export default class Link {\n\n  constructor(origin, destination){\n    this.origin = origin;\n    this.destination = destination;\n  }\n\n  getOriginContent(){\n    return this.origin;\n  }\n\n  getDestinationContent(){\n    return this.destination;\n  }\n\n  setOriginContent(content){\n    this.origin = content;\n  }\n\n  setDestinationContent(content){\n    this.destination = content;\n  }\n\n}","import Link from './Link'\nimport FluxContent from './FluxContent';\n\nexport default class Flux {\n\n  constructor(name, contents, links){\n    this.name = name;\n    this.contents = contents ? contents.map(content => new FluxContent(content.identificador, content.contentId, content.categoria, content.order)) : [];\n    this.links = links ? links : []\n    return this;\n  }\n\n  addLink(link){\n    this.links.push(link)\n  }\n\n  getLinks(){\n    return this.links;\n  }\n    \n  setLinks(links){\n    this.links = links\n  }\n\n  getContents(){\n    return this.contents\n  }\n\n  addContent(content){\n    this.contents.push(content)\n  }\n\n  setContents(contents){\n    this.contents = contents\n  }\n\n  removeContent(identificador){\n    this.setContents(this.contents.filter(content => content.getName().toLowerCase() !== identificador.toLowerCase()))\n  }\n\n\n  getOrderedContentsFromOrderField(){\n    return this.contents.sort((content1,content2) => {return content1.getOrder() - content2.getOrder()})\n  }\n\n  relink(discardedNodeKey, subject){\n    let subjectFromLinkKey = subject.fromNode.data.key\n    let subjectToLinkKey = subject.toNode.data.key\n    if (this.links.filter(link => link.destination === discardedNodeKey && link.origin === subjectFromLinkKey).length > 0) {\n      this.removeLinkWithOriginAndDestination(subjectFromLinkKey, discardedNodeKey)\n    }\n    else{\n      if (this.links.filter(link => link.origin === discardedNodeKey && link.destination === subjectToLinkKey).length > 0){\n        this.removeLinkWithOriginAndDestination(discardedNodeKey, subjectToLinkKey)\n      }\n    }\n    this.addLink(new Link(subjectFromLinkKey, subjectToLinkKey))\n  }  \n\n  removeLinkWithOriginAndDestination(from, to){\n    this.setLinks(this.links.filter(link => !(link.origin === from && link.destination === to)))\n  }\n\n  removeLinkWithOrigin(from){\n    this.setLinks(this.links.filter(link => link.origin !== from))\n  }\n\n  removeLinkWithDestination(to){\n    this.setLinks(this.links.filter(link => link.destination !== to))\n  }  \n\n  addLinkWithOriginAndDestination(from, to){\n    this.addLink(new Link(from, to))\n  }\n\n  removeLink(link){\n    this.setLinks(fluxLink => fluxLink !== link)\n  }\n\n  getOrderedLinksFromContentsOrder(){\n    let links = []\n    this.getOrderedContentsFromOrderField().map( (content,i) => {\n      if (this.getOrderedContentsFromOrderField()[i + 1]) {\n        let origin = content.getName()\n        let destination = this.getOrderedContentsFromOrderField()[i + 1].getName()\n        links.push(new Link(origin, destination))\n      }\n    })\n    this.links = links\n    return links\n  }\n\n\n  //when the flux edition is done, the order of the contents is determined by the links, not by the contents array order.\n\n\n  getOrderedContentsFromLinks(){\n    let firstContent = this.getFirstContentFromLinks();\n    let nextContent = firstContent;\n    let orderedContents = [firstContent]\n    this.links.map( link => {\n      let auxLink = this.getLinkWithOrigin(nextContent);\n      nextContent = this.getContentByName(auxLink.destination);\n      orderedContents.push(nextContent);\n    })\n    return orderedContents;    \n  }\n\n  getFirstContentFromLinks(){ //returns the content that is no destination for any link but that is origin of one. contents out of the flow are ignored\n    return this.contents.filter( content => {\n      return this.links.filter( link => link.destination.toLowerCase() === content.getName().toLowerCase()).length === 0 &&\n             this.links.filter( link => link.origin.toLowerCase() === content.getName().toLowerCase()).length === 1\n    })[0];\n  }\n\n  getLinkWithOrigin(content){\n    return this.links.filter(link => link.origin.toLowerCase() === content.getName().toLowerCase())[0]\n  }\n\n  getContentByName(contentId){\n    return this.contents.filter(content => content.getName().toLowerCase() === contentId.toLowerCase())[0]\n  }\n\n}","import React, {Component} from 'react';\nimport go from 'gojs';\nimport {Button, Spin, Modal, Input, Select, Collapse, Icon, message,Checkbox, Radio} from 'antd'\nimport axios from 'axios'\nimport FluxContent from '../classes/FluxContent';\nimport DroppableContent from '../classes/DroppableContent';\nimport Flux from '../classes/Flux';\nconst goObj = go.GraphObject.make;\n\nexport default class GoJs extends Component {\n\n  constructor (props) {\n    super (props);\n    this.renderCanvas = this.renderCanvas.bind (this);\n    this.state = {\n      keyForRerender:0,\n      flux:null,\n      temporaryContent:null,\n      temporaryLink:null,\n      valueRadioNode:null,\n      valueCheck:false,\n      modalLinkVisible:false,\n      modalNodeVisible:false,\n      contents:[],\n      myModel: null, \n      myDiagram: null,\n      loading:false,\n      success:null,\n      error:null,\n      modalVisible:false,\n      inputValue:null,\n      inputValueText:null,\n      showSend:false,\n      pattern:null,\n      index:null,\n      addedContents:[],\n      patterns:[\"Leer solo titulos\",\"Leer introduccion y contenido\"],//,\"Read paragraph to paragraph\"\n      infoPatterns:[\"Solo se leeran los titulos de los contenidos definidos para el grupo.\"\n      ,\"Se leeran los titulos de los contenidos definidos de a uno por vez, dando la posibilidad de elegir entre leer solo una introduccion o tambien el resto del contenido.\"\n      ] //,\"The body of the contents will be read paragraph by paragraph.\"\n    }\n    this.onDiagramEnter = this.onDiagramEnter.bind(this)\n    this.onDiagramDrop = this.onDiagramDrop.bind(this)\n    this.onDragOver = this.onDragOver.bind(this)\n    this.sendData = this.sendData.bind(this)\n    this.renderCanvas = this.renderCanvas.bind(this)\n    this.showSendDataModal = this.showSendDataModal.bind(this)\n    this.onChangeInput = this.onChangeInput.bind(this)\n    this.generateNodeTemplate = this.generateNodeTemplate.bind(this)\n    this.generateLinkTemplate= this.generateLinkTemplate.bind(this)\n  }\n\n  componentWillReceiveProps(props){\n    if (props.shouldShowFlux !== this.props.shouldShowFlux || props.flux !== this.props.flux) {\n      this.addContentsManually(props.flux);\n      console.log(this.state)\n    }\n  }\n\n  componentDidMount () {\n    this.renderCanvas ();\n  }\n\n  handlePattern(pattern){\n    var index;\n    switch(pattern){\n      case \"Leer solo titulos\":\n        index = 0\n      break;\n      case \"Leer introduccion y contenido\":\n        index = 1\n      break;\n      case \"Leer parrafo a parrafo\":\n        index = 2\n      break;\n    }\n\n    this.setState({pattern,index})\n  }\n\n  generateNodeTemplate(){\n    var handlerThis = this;\n    let nodeTemplate = goObj(\n      go.Node,\n     \"Auto\",\n      {\n        doubleClick: function(e, node) {\n            // node is the Node that was double-clicked\n            let data = node.data;\n            let key = data.key\n            handlerThis.setState({\n              modalNodeVisible:true,\n              temporaryContent:key\n            })\n        }\n      },\n      new go.Binding('location'),\n      goObj(\n        go.Shape, \"RoundedRectangle\",\n        {\n          portId: \"\", \n          fromLinkable: true, \n          toLinkable: true,\n          toMaxLinks:1,\n          fromMaxLinks:1,\n          toLinkableSelfNode: false\n        },\n        new go.Binding(\"fill\", \"color\")\n      ),\n      goObj(\n        go.TextBlock,\n        { margin: 6, font: \"18px sans-serif\" },\n        new go.Binding(\"text\", \"identificador\")\n      )\n    )\n    return nodeTemplate;    \n  }\n\n  generateLinkTemplate(){\n    var handlerThis = this;\n    let linkTemplate = goObj(go.Link,\n      { curve: go.Link.Bezier },\n      {\n        doubleClick: function(e, link) {\n            // node is the Node that was double-clicked\n            let key = link.toNode.data.key;\n            handlerThis.setState({\n              modalLinkVisible:true,\n              temporaryLink:key\n            })\n        }\n      },\n      {relinkableFrom: true, relinkableTo: true},\n      goObj(go.Shape),  // the link shape\n      goObj(go.Shape,   // the arrowhead\n        { toArrow: \"OpenTriangle\", fill: null })\n    );\n    return linkTemplate\n  }\n\n\n  renderCanvas () {\n    let model = goObj(go.TreeModel)\n    let diagram = goObj(go.Diagram, this.refs.goJsDiv, {initialContentAlignment: go.Spot.Center});\n    diagram.addDiagramListener(\"LinkDrawn\", (ev) => {\n      this.state.flux.addLinkWithOriginAndDestination(ev.subject.fromNode.data.key, ev.subject.toNode.data.key);\n      this.setState({keyForRerender:Math.random()})\n    })\n    diagram.addDiagramListener(\"LinkRelinked\", (ev) => {\n      this.state.flux.relink(ev.parameter.part.key, ev.subject) // first param is the discarded node of the link, the second is the one that remains\n    })\n    diagram.addDiagramListener(\"SelectionDeleted\", (ev) => {\n      if (ev.subject.first().Yd.from) {\n        this.state.flux.removeLinkWithOriginAndDestination(ev.subject.first().Yd.from, ev.subject.first().Yd.to)      \n        this.setState({keyForRerender:Math.random()})\n      }\n      else{\n        this.state.flux.removeContent(ev.subject.first().part.data.key)\n        this.state.flux.removeLinkWithOrigin(ev.subject.first().part.data.key)\n        this.state.flux.removeLinkWithDestination(ev.subject.first().part.data.key)\n        this.setState({keyForRerender:Math.random()})\n      }\n    })\n    this.setModelAndDiagram(model, diagram)\n  \n  }\n\n  showSendDataModal(){\n    this.setState({modalVisible:true})\n  }\n\n  sendData(){\n        //var username = (new URL(window.location.href)).searchParams.get('username')\n        let contents = this.state.flux.getOrderedContentsFromLinks()\n        this.setState({loading:true})\n        let contentsToSend = {nombreConjunto:this.state.inputValue, pattern:this.state.pattern, contents:contents}\n        axios.post('https://alexa-apirest.herokuapp.com/users/createFlow', contentsToSend)\n        .then(() => {this.setState({\n          loading:false,success:\"success\", showSend:false})\n        })\n        .catch((error) => {\n          if (error.response && error.response.data) {\n            this.setState({\n              loading:false,\n              error:error.response.data\n            }, this.setState({\n              error:null\n            }))\n          }\n          else{\n            console.log(error)\n          }\n        })\n        this.setState({\n          modalVisible:false,\n        })\n        /* if(this.state.showSend){\n          axios.put('https://alexa-apirest.herokuapp.com/users/updateFlow/user/gonza', contentsToSend).then(() => {\n            this.setState({loading:false,success:\"success\",showSend:false})\n            this.state.myDiagram.div = null;\n          })\n          .catch((error) => {\n            error.response && error.response.data ? \n            this.setState({loading:false,error:error.response.data})\n            :\n            console.log(error)\n          })\n        }else{ */\n        /* } */\n  }\n  \n  setModelAndDiagram(model, diagram){\n    diagram.model = new go.GraphLinksModel([],[]);\n    diagram.nodeTemplate = this.generateNodeTemplate()\n    diagram.linkTemplate = this.generateLinkTemplate()\n    diagram.validCycle = go.Diagram.CycleDestinationTree;\n    this.setState({\n      myModel: model, \n      myDiagram: diagram\n    })    \n  }\n  \n  onDiagramEnter(event){\n    event.preventDefault();\n  }\n\n  getFluxContent(content){\n    return new FluxContent(content.identificador, content.contentId, content.categoria, content.order)\n  }\n\n  getDroppableContent(properties){ //crea el content object\n    let parsedContent1 = JSON.parse(properties[0].type)\n    let parsedContent2 = JSON.parse(properties[1].type)\n    let parsedContent3 = JSON.parse(properties[2].type)\n    let parsedContent4 = JSON.parse(properties[3].type)\n    const content = {...parsedContent1,...parsedContent2,...parsedContent3,...parsedContent4}\n    return new DroppableContent(content.identificador, content.contentid, content.categoria, content.isnavegable ) \n  }\n\n  isNotInDiagram(content){ //if the content is not in the diagram\n    return !this.state.addedContents.some(addedContent => JSON.stringify(addedContent.getIdContent()) === JSON.stringify(content.getIdContent()))\n  }\n\n\n  doesLinkApplies(link, oldContents){ //if the new link is related with any of the previous contents, then it should not be added\n    return !oldContents.some( content => link.origin.toLowerCase() === content.getName().toLowerCase() ||  link.destination.toLowerCase() === content.getName().toLowerCase() )\n  }\n\n  addContentToGoJsDiagram(content, fluxName, point){ //creates the content in the apps diagram\n    this.state.myDiagram.startTransaction('new node');\n    this.state.myDiagram.model.addNodeData({\n      key:content.getName(),\n      location:point,\n      identificador:fluxName !== \"\" ? fluxName + \" - \" + content.getName() : content.getName(),\n      color:go.Brush.randomColor()}\n      )\n      this.state.myDiagram.commitTransaction('new node');\n  }\n\n  addLinkToGoJsDiagram(link){ //creates the link in the apps diagram\n    this.state.myDiagram.startTransaction('new link');\n    this.state.myDiagram.model.addLinkDataCollection([{\n      from:link.origin,\n      to:link.destination\n    }])\n    this.state.myDiagram.commitTransaction('new link');\n  }\n\n\n  addContentsManually(flux){\n    let newFlux = new Flux(flux.name);\n    const oldContents = this.state.addedContents\n    flux.getOrderedContentsFromOrderField().map( (content, i) => {\n      if (this.isNotInDiagram(content)) {\n        newFlux.addContent(content)\n        let point = this.state.myDiagram.transformViewToDoc(new go.Point(300 + i * 100 , 100 + (i * 100)));\n        this.addContentToGoJsDiagram(content,flux.name,point) //adds the content to the actual Diagram\n        this.setState(prevState => ({\n          addedContents:[...prevState.addedContents, content]\n        }))\n      }\n    })\n    flux.getOrderedLinksFromContentsOrder().map(link => {\n      if (this.doesLinkApplies(link,oldContents)) {\n        this.addLinkToGoJsDiagram(link)\n        newFlux.addLink(link)\n      }\n    })\n    if (this.state.flux) {\n      this.state.flux.contents.map( content => newFlux.addContent(content))\n      this.state.flux.links.map(link => newFlux.addLink(link))\n    }\n    this.setState({\n      flux:newFlux,\n      inputValue:flux.name\n    })\n  }\n\n  calculateDroppedPoint(event){\n    window.PIXELRATIO = this.state.myDiagram.computePixelRatio();\n    let pixelratio = window.PIXELRATIO;\n    let can = event.target;\n    // if the target is not the canvas, we may have trouble, so just quit:\n    if (!(can instanceof HTMLCanvasElement)) return;\n    var bbox = can.getBoundingClientRect();\n    var bbw = bbox.width;\n    if (bbw === 0) bbw = 0.001;\n    var bbh = bbox.height;\n    if (bbh === 0) bbh = 0.001;\n    var mx = event.clientX - bbox.left * ((can.width/pixelratio) / bbw);\n    var my = event.clientY - bbox.top * ((can.height/pixelratio) / bbh);\n    return this.state.myDiagram.transformViewToDoc(new go.Point(mx, my));\n  }\n  \n  \n  onDiagramDrop(event){\n    let content = this.getDroppableContent(event.dataTransfer.items)\n    if (this.isNotInDiagram(content)) { \n      if (this.state.flux === null) { //if a flux is not being edited in the application\n        let newFlux = new Flux('new flux');\n        newFlux.addContent(content)\n        this.setState({flux: newFlux})\n      }\n      else{ //if there is already a flux being edited\n        this.state.flux.addContent(content)\n      }\n      let point = this.calculateDroppedPoint(event); //calculates the drop event point\n      let {contents} = this.state\n      contents.push(content)\n      this.setState({contents})    \n      this.addContentToGoJsDiagram(content, \"\", point) //inserts the content in the diagram\n      this.setState(prevState => ({\n        addedContents:[...prevState.addedContents, content]\n      }))\n    }\n  }\n\n  onDragOver(event){\n    //-----FALTA CONTROLAR QUE NO SE PUEDA SOLTAR UN CONTENIDO INHABILITADO EN EL DIAGRAMA\n    //Agregar tmb un metodo para dar aviso al hacer un mouseOver sobre el contenido inhabilitado\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n\n  success = () => {\n    message.success('Se ha creado un nuevo grupo de contenidos!', 3 , function(){\n      window.location.reload()\n    });   \n  };\n\n  error = () => {\n    message.error('Ocurrio un error al intentar crear un nuevo grupo de contenidos', 3);\n  };\n  \n  onChangeInput(e){\n    this.setState({inputValue:e.target.value})\n  }\n\n  onChangeInputText = (e) =>{\n    this.setState({inputValueText:e.target.value})\n  }\n\n  \n  onChangeRadioNode = (e) =>{\n    this.setState({\n      valueRadioNode:e.target.value\n    })\n  }\n\n  onChangeCheckLink = (checkedValue) => {\n    this.setState({\n      valueCheck:checkedValue.target.checked\n    })\n  }\n\n  confirmNodeModal = () =>{\n    let contentNode = this.state.temporaryContent //name del nodo\n    this.state.flux.getContentByName(contentNode).setData({pattern:this.state.valueRadioNode})\n    this.setState({\n      modalNodeVisible:false,\n      temporaryContent:null,\n      valueRadioNode:null\n    })\n  }\n\n  confirmLinkModal = () =>{\n    let contentNode = this.state.temporaryLink //link.destination\n    this.state.flux.getContentByName(contentNode).setData({\n      metaInfo:this.state.inputValueText,\n      next:this.state.valueRadioLink\n    })\n    this.setState({\n      modalLinkVisible:false,\n      inputValueText:null,\n      temporaryLink:null\n  \t})\n  }\n\n  nodeModal(){\n    const radioStyle = {\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n    const RadioGroup = Radio.Group;\n    return(\n      <Modal\n        title=\"Nodo\"\n        centered = {true}\n        visible={this.state.modalNodeVisible}\n        onOk={this.confirmNodeModal}\n        onCancel={() => this.setState({modalNodeVisible:false,valueRadioNode:null,temporaryContent:null})}>\n        <div>\n          <p>Opciones de Lectura:</p>\n          <RadioGroup onChange={this.onChangeRadioNode} value={this.state.valueRadioNode}>\n            <Radio style={radioStyle} value={\"OnlyTitle\"}>Solo titulo</Radio>\n            <Radio style={radioStyle} value={\"All\"}>Titulo, introduccion y contenido</Radio>\n          </RadioGroup>\n        </div>             \n      </Modal>\n    )\n  }\n\n  linkModal(){\n    const RadioGroup = Radio.Group;\n    const radioStyle = {\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n    return(\n      <Modal\n      title=\"Link\"\n      visible={this.state.modalLinkVisible}\n      onOk={this.confirmLinkModal}\n      onCancel={() => this.setState({modalLinkVisible:false})}>\n      <div>\n        <p>Como continuar la lectura de contenidos?</p>\n        <Checkbox onChange={this.onChangeCheckLink}>\n            Leer texto previo al contenido\n            {this.state.valueCheck === true ? <Input placeholder=\"Ingresar texto\" onChange={this.onChangeInputText} style={{ width: 100, marginLeft: 10 }} /> : null}\n        </Checkbox>\n      </div>\n    </Modal>\n    )\n  }\n  \n  submitModal(){\n    const customPanelStyle = {\n      background: '#f7f7f7',\n      borderRadius: 4,\n      marginBottom: 24,\n      border: 0,\n      overflow: 'hidden',\n      marginTop:\"20px\"\n    };\n    const {Option} = Select\n    const {Panel} = Collapse;\n    return(\n      <Modal\n        title=\"Confirmar accion\"\n        visible={this.state.modalVisible}\n        onOk={this.sendData}\n        onCancel={() => this.setState({modalVisible:false})}>\n          <div>\n            Por favor, ingrese un nombre para el conjunto de contenidos a enviar\n            <Input value={this.state.inputValue} style={{width:\"100px\", marginLeft:\"170px\",marginTop:\"20px\"}} onChange={this.onChangeInput}></Input> \n            <p> Seleccionar un patron de lectura de contenidos </p>\n            <Select value={this.state.pattern? this.state.pattern : undefined} placeholder=\"Patron de lectura\" onChange={(e) => this.handlePattern(e)} style={{width:\"230px\", marginLeft:\"130px\"}}>\n              {this.state.patterns.map( (pattern, index) => \n                <Option \n                  key={index}   \n                  value={pattern}>\n                    {pattern}\n                </Option>\n              )}\n            </Select>\n            { this.state.pattern &&\n              <Collapse bordered={false} defaultActiveKey={['1']} expandIcon={({ isActive }) => <Icon type=\"caret-right\" rotate={isActive ? 90 : 0}> </Icon>}>                \n                <Panel header={this.state.pattern} key=\"1\" style={customPanelStyle}>\n                  <p style={{ paddingLeft: 24 }}> {this.state.infoPatterns[this.state.index]} </p>\n                </Panel>\n              </Collapse>\n            }\n          </div>\n      </Modal>\n    )\n  }  \n\n  render () {\n    console.log(this.state.flux)\n    const goJsStyle = {'width': '116%','height': '874px', 'backgroundColor': \"white\",'marginLeft':\"-16%\"}\n    return(\n      <div>\n        {this.state.loading && <div className=\"example\"><Spin className=\"diagram-spin\" size=\"large\"/></div>}\n        <div onDragEnter={this.onDiagramEnter}  className=\"diagram\" onDrop={this.onDiagramDrop} onDragOver={this.onDragOver}>\n          <div  ref=\"goJsDiv\" style={goJsStyle}></div>\n        </div>\n        <div className=\"sendButtonContainer\">{ this.state.success ? this.success() : null }\n          <Button \n          className=\"sendButton\"         \n          onClick={this.showSendDataModal} key={this.state.keyForRerender} \n          disabled={!this.state.flux || (this.state.flux && this.state.flux.contents.length !== (this.state.flux.links.length + 1))}> \n            Deployar el skill \n          </Button>\n          {this.state.error && this.error()}\n        </div>\n        {this.nodeModal()}\n        {this.linkModal()}\n        {this.submitModal()}\n      </div>\n    ) \n  }\n}","import React from 'react'\nimport {Layout} from 'antd'\nimport LeftPanel from './LeftPanel'\n// import RightPanel from './RightPanel'\nimport Diagram from './Diagram'\nimport axios from 'axios'\nimport Flux from '../classes/Flux'\n\nexport default class ContentAdmin extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      showFluxContent: false,\n      diagramFluxId: false,\n      categories: [],\n      contents:[],\n      fluxes:[]\n    }\n    this.changeContents = this.changeContents.bind(this)\n    this.addFluxToDiagram = this.addFluxToDiagram.bind(this)\n  }\n\n  componentDidMount(){\n    //var username = (new URL(window.location.href)).searchParams.get('username')\n\n    axios.get(\"https://alexa-apirest.herokuapp.com/users/categories\").then( (response) => {\n      if (response.data.length > 0) this.setState({categories:response.data}) \n    });\n\n    axios.get(\"https://alexa-apirest.herokuapp.com/users/admin/contentsByFirstCategory\").then( (response) => {\n      if (response.data.length > 0) this.setState({contents:response.data})  \n    });\n    axios.get(\"https://alexa-apirest.herokuapp.com/users/admin/contentsAndFlows\").then( (response) => {\n      let fluxes;\n      if (response.data.length > 0) {\n        fluxes = response.data.map(flux => {\n          return new Flux(flux._id, flux.contenidos)\n        })\n      }\n      this.setState({fluxes})  \n  })    \n  }\n\n  changeContents(newContents){\n    this.setState({contents:newContents})\n  }\n\n  addFluxToDiagram(flux){\n    this.setState({\n      showFluxContent:true,\n      diagramFlux: flux\n    })\n  }\n  \n  render(){\n\n    const {Header, Sider, Content} = Layout;\n       \n    return(\n      <div>\n        <Layout style={{height:\"1000px\"}}>\n        <Sider>\n          {this.state.contents.length > 0 && \n            <LeftPanel\n              changeContents={this.changeContents}\n              contents={this.state.contents}\n              fluxes={this.state.fluxes}\n              addFluxToDiagram={this.addFluxToDiagram}\n              categories={this.state.categories}\n              />\n          }\n        </Sider>\n        <Layout>\n          <Header style={{color:\"white\",fontSize:\"20px\"}}>Administrador de contenidos del Skill</Header>\n          <Content>\n            <Diagram\n              shouldShowFlux={this.state.showFluxContent}\n              flux={this.state.diagramFlux}\n            />\n          </Content>\n        </Layout>\n        <Sider>\n        </Sider>\n      </Layout>\n      </div>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport ContentAdmin from './ContentAdmin';\nimport logo from '../logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ContentAdmin/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}